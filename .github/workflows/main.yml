name: Deploy Spring Boot to EC2

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: adapptado-backend
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
  BACKEND_DIR: backend
  RDS_ENDPOINT: ${{ secrets.RDS_ENDPOINT }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.BACKEND_DIR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.0.0

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest .
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Iniciar el servicio Docker (usamos sudo -E para preservar las variables de entorno)
            sudo -E service docker start
            # Autenticar en ECR
            aws ecr get-login-password --region $AWS_REGION | sudo -E docker login --username AWS --password-stdin $ECR_REGISTRY
            # Descargar la Ãºltima imagen
            sudo -E docker pull $ECR_REGISTRY/${ECR_REPOSITORY}:latest
            # Detener y remover el contenedor anterior, si existe
            sudo -E docker stop adapptado-backend || true
            sudo -E docker rm adapptado-backend || true
            # Ejecutar el contenedor
            sudo -E docker run -d \
              --name adapptado-backend \
              -p 8080:8080 \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://$RDS_ENDPOINT/nocountrydb \
              -e SPRING_DATASOURCE_USERNAME=dbadmin \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
              $ECR_REGISTRY/${ECR_REPOSITORY}:latest
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          RDS_ENDPOINT: ${{ env.RDS_ENDPOINT }}
